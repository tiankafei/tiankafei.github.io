(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{463:function(a,s,t){"use strict";t.r(s);var e=t(42),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"elasticsearch学习笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch学习笔记"}},[a._v("#")]),a._v(" Elasticsearch学习笔记")]),a._v(" "),t("h2",{attrs:{id:"帮助文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#帮助文档"}},[a._v("#")]),a._v(" 帮助文档")]),a._v(" "),t("h3",{attrs:{id:"中文官方文档-较老"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中文官方文档-较老"}},[a._v("#")]),a._v(" 中文官方文档（较老）")]),a._v(" "),t("div",{staticClass:"language-http extra-class"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("https:")]),a._v("//www.elastic.co/guide/cn/elasticsearch/guide/current/getting-started.html#getting-started\n")])])]),t("h3",{attrs:{id:"英文最新文档-较新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#英文最新文档-较新"}},[a._v("#")]),a._v(" 英文最新文档（较新）")]),a._v(" "),t("div",{staticClass:"language-http extra-class"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("https:")]),a._v("//www.elastic.co/guide/en/elasticsearch/reference/7.10/getting-started.html\n")])])]),t("h2",{attrs:{id:"es核心概念和原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es核心概念和原理"}},[a._v("#")]),a._v(" ES核心概念和原理")]),a._v(" "),t("h3",{attrs:{id:"什么是搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是搜索"}},[a._v("#")]),a._v(" 什么是搜索")]),a._v(" "),t("p",[a._v("百度、垂直搜索（站内搜索）。搜索：通过一个"),t("strong",[a._v("关键词")]),a._v("或一段描述，得到你想要（相关度高）的结果")]),a._v(" "),t("h3",{attrs:{id:"如何实现搜索功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何实现搜索功能"}},[a._v("#")]),a._v(" 如何实现搜索功能")]),a._v(" "),t("p",[a._v("关系型数据库：性能差、不可靠、结果不准确（相关度低）")]),a._v(" "),t("h3",{attrs:{id:"倒排索引、lucene和全文检索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引、lucene和全文检索"}},[a._v("#")]),a._v(" 倒排索引、"),t("code",[a._v("Lucene")]),a._v("和全文检索")]),a._v(" "),t("ol",[t("li",[a._v("倒排索引的数据结构（存储的数据）\n"),t("ol",[t("li",[a._v("包含这个关键词的"),t("code",[a._v("document list")])]),a._v(" "),t("li",[a._v("关键词在每个doc中出现的次数"),t("code",[a._v("TF term frequency")])]),a._v(" "),t("li",[a._v("关键词在整个索引中出现的次数"),t("code",[a._v("IDF inverse doc frequency")]),a._v("（值越大，代表相关度越低）")]),a._v(" "),t("li",[a._v("关键词在当前"),t("code",[a._v("doc")]),a._v("中出现的次数")]),a._v(" "),t("li",[a._v("每个"),t("code",[a._v("doc")]),a._v("的长度，越长相关度越低")]),a._v(" "),t("li",[a._v("包含这个关键词的所有"),t("code",[a._v("doc")]),a._v("的平均长度")])])]),a._v(" "),t("li",[t("code",[a._v("Lucene")]),a._v("："),t("code",[a._v("jar")]),a._v("包，帮我们创建倒排索引，提供了复杂的"),t("code",[a._v("API")])]),a._v(" "),t("li",[a._v("如果用"),t("code",[a._v("Luncene")]),a._v("做集群，会有哪些问题\n"),t("ul",[t("li",[a._v("节点一旦宕机，节点数据丢失，后果不堪设想，可用性差")]),a._v(" "),t("li",[a._v("自己维护，麻烦（自己创建管理索引），单台节点的承载请求的能里是有限的，需要人工做负载。")])])])]),a._v(" "),t("p",[t("img",{attrs:{src:"/images/%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95.png",alt:"倒排索引"}})]),a._v(" "),t("h3",{attrs:{id:"倒排索引的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引的特点"}},[a._v("#")]),a._v(" 倒排索引的特点")]),a._v(" "),t("ol",[t("li",[a._v("倒排索引的数据量 > 原始数据量")]),a._v(" "),t("li",[a._v("倒排索引做的是完全匹配，不需要全表扫描")]),a._v(" "),t("li",[a._v("倒排索引记录着这个词出现在原始数据的那个主键，根据主键去原始数据中查询是很快的")])]),a._v(" "),t("h3",{attrs:{id:"elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[a._v("#")]),a._v(" Elasticsearch")]),a._v(" "),t("ol",[t("li",[a._v("特点\n"),t("ul",[t("li",[a._v("分布式")]),a._v(" "),t("li",[a._v("高性能")]),a._v(" "),t("li",[a._v("高可用")]),a._v(" "),t("li",[a._v("可伸缩")]),a._v(" "),t("li",[a._v("易维护")])])]),a._v(" "),t("li",[a._v("优点\n"),t("ul",[t("li",[a._v("面向开发者友好，屏蔽了Lucene的复杂特性，集群自动发现（cluster discovery）")]),a._v(" "),t("li",[a._v("自动维护数据在多个节点上的建立")]),a._v(" "),t("li",[a._v("会帮我们做搜索请求的负载均衡")]),a._v(" "),t("li",[a._v("自动维护冗余副本，保证了部分节点宕机的情况下仍然不会有任何数据丢失")]),a._v(" "),t("li",[t("code",[a._v("ES")]),a._v("基于"),t("code",[a._v("Lucene")]),a._v("提供了很多高级功能：复合查询、聚合分析、基于地理位置等")]),a._v(" "),t("li",[a._v("对于大公司，可以构建几百台服务器的大型分布式集群，处理PB级别数据；对于小公司，开箱即用，门槛低上手简单")]),a._v(" "),t("li",[a._v("相比传统数据库，提供了全文检索，同义词处理（美丽的 cls > 漂亮的 cls），相关度排名。聚合分析以及海量数据的近实时（NTR）处理，这些传统数据库完全做不到")])])]),a._v(" "),t("li",[a._v("应用领域\n"),t("ul",[t("li",[a._v("百度（全文检索，高亮、搜索推荐）")]),a._v(" "),t("li",[a._v("各大网站的用户行为日志（用户点击、浏览、收藏、评论）")]),a._v(" "),t("li",[a._v("BI（business Intelligence商业智能），数据分析，数据挖掘统计")]),a._v(" "),t("li",[a._v("Github：代码托管平台，几千亿行代码")]),a._v(" "),t("li",[a._v("ELK：Elasticsearch（数据存储）、Logstash（日志采集）、Kibana（可视化）")])])])]),a._v(" "),t("h3",{attrs:{id:"es-核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es-核心概念"}},[a._v("#")]),a._v(" ES 核心概念")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("cluster")]),a._v("（集群）：每个集群至少包含两个节点")]),a._v(" "),t("li",[t("code",[a._v("node")]),a._v("：集群中的每个节点，一个节点不代表一台服务器")]),a._v(" "),t("li",[t("code",[a._v("field")]),a._v("：一个数据字段，与"),t("code",[a._v("index")]),a._v("和"),t("code",[a._v("type")]),a._v("一起，可以定位一个"),t("code",[a._v("doc")])]),a._v(" "),t("li",[t("code",[a._v("document")]),a._v("："),t("code",[a._v("es")]),a._v("最小的数据单元，通常是以"),t("code",[a._v("json")]),a._v("的形式存储的")]),a._v(" "),t("li",[t("code",[a._v("type")]),a._v("：逻辑上的数据分类，"),t("code",[a._v("es7.x")]),a._v("中删除了"),t("code",[a._v("type")]),a._v("的概念")]),a._v(" "),t("li",[t("code",[a._v("index")]),a._v("：一类相同或者类似的"),t("code",[a._v("doc")]),a._v("，比如一个员工索引，商品索引")]),a._v(" "),t("li",[t("code",[a._v("shard")]),a._v("分片：P分片，R副本\n"),t("ul",[t("li",[a._v("一个"),t("code",[a._v("index")]),a._v("包含多个"),t("code",[a._v("shard")]),a._v("，默认5个分片，默认每个分片分配一个副本，分片的数量在创建索引的时候设置，如果想修改，需要重建索引")]),a._v(" "),t("li",[a._v("每个"),t("code",[a._v("shard")]),a._v("都是一个"),t("code",[a._v("lucene")]),a._v("实例，有完整的创建索引的处理请求能力")]),a._v(" "),t("li",[a._v("es会自动在"),t("code",[a._v("nodes")]),a._v("上为我们做"),t("code",[a._v("shard")]),a._v("均衡")]),a._v(" "),t("li",[a._v("一个"),t("code",[a._v("doc")]),a._v("是不可能同时存在与多个分片中的，但是可以存在于多个副本中")]),a._v(" "),t("li",[a._v("分片和对应的副本不能同时存在于同一个节点，所以最低的可用配置是两个节点，互为主备")])])])]),a._v(" "),t("h2",{attrs:{id:"环境安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境安装"}},[a._v("#")]),a._v(" 环境安装")]),a._v(" "),t("h3",{attrs:{id:"docker-安装配置-es"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装配置-es"}},[a._v("#")]),a._v(" docker 安装配置 es")]),a._v(" "),t("h4",{attrs:{id:"拉取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像"}},[a._v("#")]),a._v(" 拉取镜像")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("docker pull elasticsearch:7.6.2\n")])])]),t("h4",{attrs:{id:"启动es"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动es"}},[a._v("#")]),a._v(" 启动es")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9200")]),a._v(":9200 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9300")]),a._v(":9300 --restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always -e "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"discovery.type=single-node"')]),a._v(" --name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("elasticsearch elasticsearch:7.6.2\n")])])]),t("h4",{attrs:{id:"修改配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改配置"}},[a._v("#")]),a._v(" 修改配置")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("进入容器")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it elasticsearch "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("vi config/elasticsearch.yml")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("cluster.name: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my-application"')]),a._v("\nnode.name: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"node-1"')]),a._v("\nnetwork.host: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.0\n")])])])]),a._v(" "),t("li",[t("p",[a._v("重启容器")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker restart elasticsearch\n")])])])])]),a._v(" "),t("h4",{attrs:{id:"访问地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问地址"}},[a._v("#")]),a._v(" 访问地址")]),a._v(" "),t("div",{staticClass:"language-http extra-class"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("http:")]),a._v("//<IP>:<PORT>\n"),t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("http:")]),a._v("//192.168.21.123:9200/\n")])])]),t("h3",{attrs:{id:"docker-安装配置-kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装配置-kibana"}},[a._v("#")]),a._v(" docker 安装配置 kibana")]),a._v(" "),t("h4",{attrs:{id:"拉取镜像-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像-2"}},[a._v("#")]),a._v(" 拉取镜像")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker pull kibana:7.6.2\n")])])]),t("h4",{attrs:{id:"启动kibana"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动kibana"}},[a._v("#")]),a._v(" 启动kibana")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5601")]),a._v(":5601 --restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always --name kibana kibana:7.6.2\n")])])]),t("h4",{attrs:{id:"出现的问题修改配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#出现的问题修改配置"}},[a._v("#")]),a._v(" 出现的问题修改配置")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("如果出现以下页面：Kibana server is not ready yet，说明Kibana没有找到ES节点")])]),a._v(" "),t("li",[t("p",[a._v("进入容器")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it kibana "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("vi config/kibana.yml")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ** THIS IS AN AUTO-GENERATED FILE **")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Default Kibana configuration for docker target")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server.name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kibana\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server.host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 中文配置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("i18n.locale")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zh-CN"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("elasticsearch.hosts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://192.168.21.123:9200"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("xpack.monitoring.ui.container.elasticsearch.enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("重启容器")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker restart kibana\n")])])])])]),a._v(" "),t("h4",{attrs:{id:"访问地址-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问地址-2"}},[a._v("#")]),a._v(" 访问地址")]),a._v(" "),t("div",{staticClass:"language-http extra-class"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("http:")]),a._v("//<IP>:<PORT>\n"),t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("http:")]),a._v("//192.168.21.123:5601/\n")])])]),t("h3",{attrs:{id:"es-健康检查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es-健康检查"}},[a._v("#")]),a._v(" es 健康检查")]),a._v(" "),t("div",{staticClass:"language-http extra-class"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("http:")]),a._v("//<IP>:9200/_cluster/health\n"),t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("http:")]),a._v("//192.168.21.123:9200/_cluster/health\n")])])]),t("h4",{attrs:{id:"集群状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群状态"}},[a._v("#")]),a._v(" 集群状态")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("cluster_name")]),a._v("集群名称")]),a._v(" "),t("li",[t("code",[a._v("status")]),a._v("集群状态"),t("code",[a._v("green")]),a._v("代表健康；"),t("code",[a._v("yellow")]),a._v("代表分配了所有主分片，但至少缺少一个副本，此时集群数据仍旧完整；"),t("code",[a._v("red")]),a._v("代表部分主分片不可用，可能已经丢失数据。")]),a._v(" "),t("li",[t("code",[a._v("number_of_nodes")]),a._v("代表在线的节点总数量")]),a._v(" "),t("li",[t("code",[a._v("number_of_data_nodes")]),a._v("代表在线的数据节点的数量")]),a._v(" "),t("li",[t("code",[a._v("active_shards")]),a._v("存活的分片数量")]),a._v(" "),t("li",[t("code",[a._v("active_primary_shards")]),a._v("存活的主分片数量 正常情况下 "),t("code",[a._v("shards")]),a._v("的数量是"),t("code",[a._v("pri")]),a._v("的两倍")]),a._v(" "),t("li",[t("code",[a._v("relocating_shards")]),a._v("迁移中的分片数量，正常情况为 0")]),a._v(" "),t("li",[t("code",[a._v("initializing_shards")]),a._v("初始化中的分片数量，正常情况为 0")]),a._v(" "),t("li",[t("code",[a._v("unassigned_shards")]),a._v("未分配的分片，正常情况为 0")]),a._v(" "),t("li",[t("code",[a._v("delayed_unassigned_shards")])]),a._v(" "),t("li",[t("code",[a._v("number_of_pending_tasks")]),a._v("，准备中的任务，任务指迁移分片等，正常情况为 0")]),a._v(" "),t("li",[t("code",[a._v("number_of_in_flight_fetch")])]),a._v(" "),t("li",[t("code",[a._v("task_max_waiting_in_queue_millis")]),a._v("任务最长等待时间")]),a._v(" "),t("li",[t("code",[a._v("active_shards_percent_as_number")]),a._v("正常分片百分比 正常情况为 100%")])]),a._v(" "),t("h4",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[a._v("#")]),a._v(" API")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("/_cat/allocation")]),a._v("      \t#查看单节点的shard分配整体情况")]),a._v(" "),t("li",[t("code",[a._v("/_cat/shards")]),a._v("          \t#查看各shard的详细情况")]),a._v(" "),t("li",[t("code",[a._v("/_cat/shards/{index}")]),a._v("  \t#查看指定分片的详细情况")]),a._v(" "),t("li",[t("code",[a._v("/_cat/master")]),a._v("          \t#查看master节点信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/nodes")]),a._v("           \t#查看所有节点信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/indices")]),a._v("         \t#查看集群中所有index的详细信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/indices/{index}")]),a._v(" \t#查看集群中指定index的详细信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/segments")]),a._v("        \t#查看各index的segment详细信息,包括segment名, 所属shard, 内存(磁盘)占用大小, 是否刷盘")]),a._v(" "),t("li",[t("code",[a._v("/_cat/segments/{index}")]),a._v("\t#查看指定index的segment详细信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/count")]),a._v("           \t#查看当前集群的doc数量")]),a._v(" "),t("li",[t("code",[a._v("/_cat/count/{index}")]),a._v("   \t#查看指定索引的doc数量")]),a._v(" "),t("li",[t("code",[a._v("/_cat/recovery")]),a._v("        \t#查看集群内每个shard的recovery过程.调整replica。")]),a._v(" "),t("li",[t("code",[a._v("/_cat/recovery/{index}")]),a._v("\t#查看指定索引shard的recovery过程")]),a._v(" "),t("li",[t("code",[a._v("/_cat/health")]),a._v("          \t#查看集群当前状态：红、黄、绿")]),a._v(" "),t("li",[t("code",[a._v("/_cat/pending_tasks")]),a._v("   \t#查看当前集群的pending task")]),a._v(" "),t("li",[t("code",[a._v("/_cat/aliases")]),a._v("         \t#查看集群中所有alias信息,路由配置等")]),a._v(" "),t("li",[t("code",[a._v("/_cat/aliases/{alias}")]),a._v(" \t#查看指定索引的alias信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/thread_pool")]),a._v("     \t#查看集群各节点内部不同类型的threadpool的统计信息,")]),a._v(" "),t("li",[t("code",[a._v("/_cat/plugins")]),a._v("         \t#查看集群各个节点上的plugin信息")]),a._v(" "),t("li",[t("code",[a._v("/_cat/fielddata")]),a._v("       \t#查看当前集群各个节点的fielddata内存使用情况")]),a._v(" "),t("li",[t("code",[a._v("/_cat/fielddata/{fields}")]),a._v("\t#查看指定field的内存使用情况,里面传field属性对应的值")]),a._v(" "),t("li",[t("code",[a._v("/_cat/nodeattrs")]),a._v("\t\t\t#查看单节点的自定义属性")]),a._v(" "),t("li",[t("code",[a._v("/_cat/repositories")]),a._v("\t\t#输出集群中注册快照存储库")]),a._v(" "),t("li",[t("code",[a._v("/_cat/templates")]),a._v("\t\t\t#输出当前正在存在的模板信息")])]),a._v(" "),t("h4",{attrs:{id:"健康值状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#健康值状态"}},[a._v("#")]),a._v(" 健康值状态")]),a._v(" "),t("ol",[t("li",[a._v("Green：所有Primary和Replica均为active，集群健康")]),a._v(" "),t("li",[a._v("Yellow：至少一个Replica不可用，但是所有Primary均为active，数据仍然是可以保证完整性的")]),a._v(" "),t("li",[a._v("Red：至少有一个Primary为不可用状态，数据不完整，集群不可用")])]),a._v(" "),t("h2",{attrs:{id:"es节点有哪些类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es节点有哪些类型"}},[a._v("#")]),a._v(" ES节点有哪些类型")]),a._v(" "),t("h3",{attrs:{id:"_1-主节点-master-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-主节点-master-node"}},[a._v("#")]),a._v(" 1. 主节点（Master node）")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("主节点的主要职责是负责集群层面的相关操作，管理集群变更，如创建或删除索引，跟踪哪些节点是集群的一部分，并决定哪些分片分配给哪些相关的节点")])]),a._v(" "),t("li",[t("p",[a._v("主节点也可以作为数据节点，但稳定的主节点对集群的健康是非常重要的，默认情况下任何一个集群中的节点都有可能被选为主节点，索引数据和搜索查询等操作会占用大量的cpu，内存，io资源，为了确保一个集群的稳定，分离主节点和数据节点是一个比较好的选择")])]),a._v(" "),t("li",[t("p",[a._v("通过配置"),t("code",[a._v("node.master: true")]),a._v("(默认)使节点具有被选举为"),t("code",[a._v("Master")]),a._v("的资格。主节点是全局唯一的，从有资格成为"),t("code",[a._v("Master")]),a._v("的节点中选举")])]),a._v(" "),t("li",[t("p",[a._v("为了防止数据丢失，每个主节点应该知道有资格升为主节点的数量，默认为1，为了避免网络分区出现多主的情况，配置"),t("code",[a._v("discovery.zen.minimun_master_nodes")]),a._v("原则上最小值应该为："),t("code",[a._v("(master_eligible_nodes/2)+1")])])]),a._v(" "),t("li",[t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.master")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"_2-数据节点-data-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据节点-data-node"}},[a._v("#")]),a._v(" 2. 数据节点（Data node）")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("数据节点主要是存储索引数据的节点，执行数据相关操作：CRUD、搜索，聚合操作等。数据节点对cpu，内存，I/O要求较高， 在优化的时候需要监控数据节点的状态，当资源不够的时候，需要在集群中添加新的节点。")])]),a._v(" "),t("li",[t("p",[a._v("通过配置"),t("code",[a._v("node.data: true")]),a._v("(默认来是一个节点成为数据节点)，也可以通过下面配置创建一个数据节点")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.master")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.ingest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"_3-预处理节点-ingest-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-预处理节点-ingest-node"}},[a._v("#")]),a._v(" 3. 预处理节点（ingest node）")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("这是从5.0版本开始引入的概念。预处理操作运行在索引文档之前，即写入数据之前，通过事先定义好的一系列"),t("code",[a._v("processors")]),a._v("(处理器)和"),t("code",[a._v("pipeline")]),a._v("（管道），对数据进行某种转换、富化。"),t("code",[a._v("processors")]),a._v("和"),t("code",[a._v("pipeline")]),a._v("拦截"),t("code",[a._v("bulk")]),a._v("和"),t("code",[a._v("index")]),a._v("请求，在应用相关操作后将文档传回给"),t("code",[a._v("index")]),a._v("或"),t("code",[a._v("bulk API")])])]),a._v(" "),t("li",[t("p",[a._v("默认情况下，在所有的节点启用"),t("code",[a._v("ingest")]),a._v("。如果想在某个节点上禁用"),t("code",[a._v("ingest")]),a._v("，则可以填写配置"),t("code",[a._v("node.ingest: false")]),a._v("，也可以通过下面的配置创建一个仅用于预处理的节点：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.master")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.ingest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"_4-协调节点-coordinating-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-协调节点-coordinating-node"}},[a._v("#")]),a._v(" 4. 协调节点（Coordinating node）")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("客户端请求可以发送到集群的任何节点，每个节点都知道任意文档所处的位置，然后转发这些请求，收集数据并返回给客户端，处理客户端请求的节点称为协调节点。")])]),a._v(" "),t("li",[t("p",[a._v("协调节点将请求转发给保存数据的数据节点。每个数据节点在本地执行请求，并将结果返回给协调节点。协调节点收集完数据后，将每个数据节点的结果合并为单个全局结果。对结果收集和排序的过程可能需要很多CPU和内存资源。")])]),a._v(" "),t("li",[t("p",[a._v("通过下面配置创建一个仅用于协调的节点：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.master")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("node.ingest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"_5-部落节点-trible-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-部落节点-trible-node"}},[a._v("#")]),a._v(" 5. 部落节点（Trible node）")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("tribes")]),a._v("功能允许部落节点在多个集群之间充当联合客户端")]),a._v(" "),t("li",[a._v("部落节点是一个单独的节点，其主要工作是嗅探远程集群的集群状态，并将它们合并在一起。为了做到这一点，它加入了所有的远程集群，使它成为一个非特殊的节点，它不属于自己的集群，而是加入了多个集群。")]),a._v(" "),t("li",[a._v("也被称为"),t("code",[a._v("跨集群搜索")]),a._v("的功能，该功能"),t("code",[a._v("允许用户不仅跨本地索引，而且跨集群撰写搜索")]),a._v("。这意味着可以搜索属于其他远程集群的数据。")])]),a._v(" "),t("h3",{attrs:{id:"_6-投票节点-voting-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-投票节点-voting-node"}},[a._v("#")]),a._v(" 6. 投票节点（voting node）")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("node.voting_only: true")]),a._v("（仅投票节点，即使配置了"),t("code",[a._v("data.master: true")]),a._v("，也不会参选")]),a._v(" "),t("li",[a._v("仍然可以作为数据节点"),t("code",[a._v("node.data: true")])])]),a._v(" "),t("h2",{attrs:{id:"es如何实现高可用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es如何实现高可用"}},[a._v("#")]),a._v(" ES如何实现高可用")]),a._v(" "),t("ol",[t("li",[a._v("ES在分配单个索引的分片时会将每个分片尽可能分配到更多的节点上。但是，实际情况取决于集群拥有的分片和索引的数量以及它们的大小，不一定总是能均匀地分布")]),a._v(" "),t("li",[a._v("ES不允许Primary和它的Replica放在同一个节点中，并且同一个节点不接受完全相同的两个Replica")]),a._v(" "),t("li",[a._v("同一个节点允许多个索引的分片同时存在")])]),a._v(" "),t("h2",{attrs:{id:"es容错机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es容错机制"}},[a._v("#")]),a._v(" ES容错机制")]),a._v(" "),t("ol",[t("li",[a._v("Master选举（假如宕机节点是Master）\n"),t("ul",[t("li",[a._v("脑裂：可能会产生多个Master节点")]),a._v(" "),t("li",[a._v("解决：discovery.zen.minimum_master_nodes=N/2+1")])])]),a._v(" "),t("li",[t("code",[a._v("Replica")]),a._v("容错，新的（或者原有）Master节点会将丢失的Primary对应的某个副本提升为Primary")]),a._v(" "),t("li",[a._v("Master节点会尝试重启故障机")]),a._v(" "),t("li",[a._v("数据同步，Master会将宕机期间丢失的数据同步到重启机器对应的分片上去")])]),a._v(" "),t("h2",{attrs:{id:"如何提高es分布式系统的可用性及性能最大化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何提高es分布式系统的可用性及性能最大化"}},[a._v("#")]),a._v(" 如何提高ES分布式系统的可用性及性能最大化")]),a._v(" "),t("ol",[t("li",[a._v("每台节点的"),t("code",[a._v("shard")]),a._v("数量越少，每个"),t("code",[a._v("shard")]),a._v("分配的CPU、内存和IO资源越多，单个"),t("code",[a._v("shard")]),a._v("的性能越好，当一台机器一个"),t("code",[a._v("shard")]),a._v("时，单个"),t("code",[a._v("shard")]),a._v("性能最好")]),a._v(" "),t("li",[a._v("稳定的"),t("code",[a._v("Master节点")]),a._v("对于集群的健康非常重要！理论上讲，应该尽可能的减轻"),t("code",[a._v("Master节点")]),a._v("的压力，分片数量越多，"),t("code",[a._v("Master节点")]),a._v("维护管理"),t("code",[a._v("shard")]),a._v("的任务越重，并且节点可能就要承担更多的数据转发任务，可增加"),t("code",[a._v("仅协调节点")]),a._v("来缓解"),t("code",[a._v("Master节点")]),a._v("和"),t("code",[a._v("Data节点")]),a._v("的压力，但是在集群中添加过多的"),t("code",[a._v("仅协调节点")]),a._v("会增加整个集群的负担，因为选择的主节点必须等待每个节点的集群状态更新确认。")]),a._v(" "),t("li",[a._v("反过来说，如果相同资源分配相同的前提下，"),t("code",[a._v("shard")]),a._v("数量越少，单个"),t("code",[a._v("shard")]),a._v("的体积越大，查询性能越低，速度越慢，这个取舍应根据实际集群状况和结合应用场景等因素综合考虑")]),a._v(" "),t("li",[t("code",[a._v("data节点")]),a._v("和"),t("code",[a._v("Master节点")]),a._v("一定要分开，集群规模越大，这样做的意义也就越大")]),a._v(" "),t("li",[t("code",[a._v("data节点")]),a._v("处理与数据相关的操作，例如"),t("code",[a._v("CRUD")]),a._v("，搜索和聚合。这些操作是"),t("code",[a._v("I/O")]),a._v("，内存和"),t("code",[a._v("CPU")]),a._v("密集型的，所以他们需要更高配置的服务器以及更高的带宽，并且集群的性能冗余非常重要")]),a._v(" "),t("li",[a._v("由于"),t("code",[a._v("仅投票节")]),a._v("不参与"),t("code",[a._v("Master")]),a._v("竞选，所以和真正的"),t("code",[a._v("Master")]),a._v("节点相比，它需要的内存和CPU较少。但是，所有"),t("code",[a._v("候选节点")]),a._v("以及"),t("code",[a._v("仅投票节点")]),a._v("都可能是"),t("code",[a._v("数据节点")]),a._v("，所以他们都需要快速稳定低延迟的网络")]),a._v(" "),t("li",[a._v("高可用性（HA）群集至少需要三个主节点，其中"),t("code",[a._v("至少两个不是仅投票节点")]),a._v("。即使其中一个节点发生故障，这样的群集也将能够选举一个主节点。生产环境最好设置3台仅Master候选节点（node.master = true\t node.data = true）")]),a._v(" "),t("li",[a._v("为确保集群仍然可用，集群不能同时停止投票配置中的一半或更多节点。只要有一半以上的投票节点可用，集群仍可以正常工作。这意味着，如果存在三个或四个主节点合格的节点，则集群可以容忍其中一个节点不可用。如果有两个或更少的主机资格节点，则它们必须都保持可用")])]),a._v(" "),t("h2",{attrs:{id:"简单curd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单curd"}},[a._v("#")]),a._v(" 简单CURD")]),a._v(" "),t("h3",{attrs:{id:"创建索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建索引"}},[a._v("#")]),a._v(" 创建索引")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nPUT /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("?pretty\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nPUT /product?pretty\n")])])]),t("h3",{attrs:{id:"查询索引状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询索引状态"}},[a._v("#")]),a._v(" 查询索引状态")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("GET /_cat/indices?v\n")])])]),t("h3",{attrs:{id:"删除索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除索引"}},[a._v("#")]),a._v(" 删除索引")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nDELETE /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("?pretty\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nDELETE /product?pretty\n")])])]),t("h3",{attrs:{id:"查看索引信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看索引信息"}},[a._v("#")]),a._v(" 查看索引信息")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看索引 map 映射信息")]),a._v("\nGET /product\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看索引数据")]),a._v("\nGET /product/_search\n")])])]),t("h3",{attrs:{id:"插入数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[a._v("#")]),a._v(" 插入数据")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("PUT /product/_doc/1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xiaomi phone"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"desc"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"shouji zhong de zhandouji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3999")]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xingjiabi"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fashao"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"buka"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nPUT /product/_doc/2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xiaomi nfc phone"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"desc"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zhichi quangongneng nfc,shouji zhong de jianjiji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4999")]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xingjiabi"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fashao"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gongjiaoka"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nPUT /product/_doc/3\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nfc phone"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"desc"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"shouji zhong de hongzhaji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2999")]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xingjiabi"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fashao"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"menjinka"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nPUT /product/_doc/4\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xiaomi erji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"desc"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"erji zhong de huangmenji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("999")]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"low"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bufangshui"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yinzhicha"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nPUT /product/_doc/5\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hongmi erji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"desc"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"erji zhong de kendeji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("399")]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"lowbee"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xuhangduan"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zhiliangx"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"查询数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询数据"}},[a._v("#")]),a._v(" 查询数据")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查询单个document")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nGET /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_doc/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nGET /product/_doc/1\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看所有的document")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nGET /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_search\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nGET /product/_search\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查询多个结果的排序")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nGET /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_search?sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("排序的字段:"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("asc"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("desc"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nGET /product/_search?sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("price\nGET /product/_search?sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("price:asc\nGET /product/_search?sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("price:desc\nGET /product/_search?q"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("price:2999"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("sort")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("price:desc\n")])])]),t("h3",{attrs:{id:"更新数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新数据"}},[a._v("#")]),a._v(" 更新数据")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 全量更新（完全覆盖）")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nPUT /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_doc/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\njson格式的数据\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nPUT /product/_doc/1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xiaomi phone"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"desc"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"shouji zhong de zhandouji"')]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3999")]),a._v(",\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tags"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"xingjiabi"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fashao"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"buka"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 增量更新")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nPOST /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_doc/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_update\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"doc"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" json格式的数据\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nPOST /product/_doc/1/_update\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"doc"')]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"price"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("23999")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"删除数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[a._v("#")]),a._v(" 删除数据")]),a._v(" "),t("blockquote",[t("p",[a._v("先逻辑删除，没有立即删除，后续才会物理删除")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式")]),a._v("\nDELETE /"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/_doc/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# demo")]),a._v("\nDELETE /product/_doc/1\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);