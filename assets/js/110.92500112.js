(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{464:function(e,a,t){"use strict";t.r(a);var r=t(42),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"spring-cloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud"}},[e._v("#")]),e._v(" spring cloud")]),e._v(" "),t("h2",{attrs:{id:"eureka自我保护机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eureka自我保护机制"}},[e._v("#")]),e._v(" eureka自我保护机制")]),e._v(" "),t("h3",{attrs:{id:"自我保护背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自我保护背景"}},[e._v("#")]),e._v(" 自我保护背景")]),e._v(" "),t("p",[e._v("首先对Eureka注册中心需要了解的是Eureka各个节点都是平等的，没有ZK中角色的概念， 即使N-1个节点挂掉也不会影响其他节点的正常运行。")]),e._v(" "),t("p",[e._v("默认情况下，**如果Eureka Server在一定时间内（默认90秒）没有接收到某个微服务实例的心跳，Eureka Server将会移除该实例。**但是当网络分区故障发生时，微服务与Eureka Server之间无法正常通信，而微服务本身是正常运行的，此时不应该移除这个微服务，所以引入了自我保护机制。")]),e._v(" "),t("h3",{attrs:{id:"自我保护机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自我保护机制"}},[e._v("#")]),e._v(" 自我保护机制")]),e._v(" "),t("p",[e._v("官方对于自我保护机制的定义：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("自我保护模式正是一种针对网络异常波动的安全保护措施，使用自我保护模式能使Eureka集群更加的健壮、稳定的运行。\n")])])]),t("p",[e._v("自我保护机制的工作机制是："),t("strong",[e._v("如果在15分钟内超过85%的客户端节点都没有正常的心跳，那么Eureka就认为客户端与注册中心出现了网络故障，Eureka Server自动进入自我保护机制")]),e._v("，此时会出现以下几种情况：")]),e._v(" "),t("ol",[t("li",[e._v("Eureka Server不再从注册列表中移除因为长时间没收到心跳而应该过期的服务")]),e._v(" "),t("li",[e._v("Eureka Server仍然能够接受新服务的注册和查询请求，但是不会被同步到其它节点上，保证当前节点依然可用")]),e._v(" "),t("li",[e._v("当网络稳定时，当前Eureka Server新的注册信息会被同步到其它节点中")])]),e._v(" "),t("p",[e._v("因此Eureka Server可以很好的应对因网络故障导致部分节点失联的情况，而不会像ZK那样如果有一半不可用的情况会导致整个集群不可用而变成瘫痪。")]),e._v(" "),t("h3",{attrs:{id:"自我保护开关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自我保护开关"}},[e._v("#")]),e._v(" 自我保护开关")]),e._v(" "),t("p",[e._v("Eureka自我保护机制，通过配置 "),t("code",[e._v("eureka.server.enable-self-preservation")]),e._v(" 来"),t("code",[e._v("true")]),e._v("打开/"),t("code",[e._v("false")]),e._v("禁用自我保护机制，默认打开状态，建议生产环境打开此配置。")]),e._v(" "),t("h3",{attrs:{id:"开发环境配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发环境配置"}},[e._v("#")]),e._v(" 开发环境配置")]),e._v(" "),t("p",[e._v("开发环境中如果要实现服务失效能自动移除，只需要修改以下配置。")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("注册中心关闭自我保护机制，修改检查失效服务的时间")]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n     "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable-self-preservation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n     "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("eviction-interval-timer-in-ms")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3000")]),e._v("\n")])])])]),e._v(" "),t("li",[t("p",[e._v("微服务修改减短服务心跳的时间")]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("instance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 默认90秒")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("lease-expiration-duration-in-seconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("90")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 默认30秒")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("lease-renewal-interval-in-seconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),e._v("\n")])])])])]),e._v(" "),t("h2",{attrs:{id:"feign调用全过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#feign调用全过程"}},[e._v("#")]),e._v(" feign调用全过程")]),e._v(" "),t("h2",{attrs:{id:"autowired注解与-resource注解的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#autowired注解与-resource注解的区别"}},[e._v("#")]),e._v(" @Autowired注解与@Resource注解的区别")]),e._v(" "),t("h3",{attrs:{id:"相同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[e._v("#")]),e._v(" 相同点")]),e._v(" "),t("p",[e._v("@Resource的作用相当于@Autowired，均可标注在字段或属性的setter方法上。")]),e._v(" "),t("h3",{attrs:{id:"不同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[e._v("#")]),e._v(" 不同点")]),e._v(" "),t("ol",[t("li",[e._v("提供方：@Autowired是由Spring提供；@Resource是由J2EE提供，需要JDK1.6及以上")]),e._v(" "),t("li",[e._v("注入方式：@Autowired只按照byType 注入；@Resource默认按byName自动注入，也提供按照byType 注入；")]),e._v(" "),t("li",[e._v("属性：@Autowired按类型装配依赖对象，默认情况下它要求依赖对象必须存在，如果允许null值，可以设置它required属性为false。如果我们想使用按名称装配，可以结合 @Qualifier 注解一起使用。@Resource有两个中重要的属性：name和type。name属性指定byName，如果没有指定name属性，当注解标注在字段上，即默认取字段的名称作为bean名称寻找依赖对象，当注解标注在属性的setter方法上，即默认取属性名作为bean名称寻找依赖对象。需要注意的是，@Resource如果没有指定name属性，并且按照默认的名称仍然找不到依赖对象时， @Resource注解会回退到按类型装配。但一旦指定了name属性，就只能按名称装配了。")])]),e._v(" "),t("h3",{attrs:{id:"resource装配顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resource装配顺序"}},[e._v("#")]),e._v(" @Resource装配顺序")]),e._v(" "),t("ol",[t("li",[e._v("如果同时指定了name和type，则从Spring上下文中找到唯一匹配的bean进行装配，找不到则抛出异常")]),e._v(" "),t("li",[e._v("如果指定了name，则从上下文中查找名称（id）匹配的bean进行装配，找不到则抛出异常")]),e._v(" "),t("li",[e._v("如果指定了type，则从上下文中找到类型匹配的唯一bean进行装配，找不到或者找到多个，都会抛出异常")]),e._v(" "),t("li",[e._v("如果既没有指定name，又没有指定type，则自动按照byName方式进行装配；如果没有匹配，则回退为一个原始类型进行匹配，如果匹配则自动装配；")])]),e._v(" "),t("p",[e._v("推荐使用@Resource注解在字段上，这样就不用写setter方法了.并且这个注解是属于J2EE的，减少了与Spring的耦合,这样代码看起就比较优雅 。")])])}),[],!1,null,null,null);a.default=s.exports}}]);