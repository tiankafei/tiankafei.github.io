(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{466:function(t,s,a){"use strict";a.r(s);var e=a(42),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"分布式三种锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式三种锁"}},[t._v("#")]),t._v(" 分布式三种锁")]),t._v(" "),a("h2",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ol",[a("li",[t._v("互斥")]),t._v(" "),a("li",[t._v("不会死锁")]),t._v(" "),a("li",[t._v("加锁和释放锁，是同一个服务（线程）")]),t._v(" "),a("li")]),t._v(" "),a("h2",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" MySQL")]),t._v(" "),a("h2",{attrs:{id:"redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),a("h3",{attrs:{id:"单节点加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单节点加锁"}},[t._v("#")]),t._v(" 单节点加锁")]),t._v(" "),a("h3",{attrs:{id:"redisson加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redisson加锁"}},[t._v("#")]),t._v(" Redisson加锁")]),t._v(" "),a("p",[t._v("有5台毫无任何关系的redis实例，参与分布式锁的竞争时，如果有一个线程过半通过，得到了3把锁，此时，其中有一台redis挂了，就剩下2把锁了，当这台挂的实例起来之后，由于数据的丢失，另外一个线程也能获得过半的实例个数，此时就会出现被多次加锁的情况：解决方案，让挂了的实例延迟启动，启动的时间要求大于锁的有效期时间")]),t._v(" "),a("h2",{attrs:{id:"zookeeper、etcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper、etcd"}},[t._v("#")]),t._v(" Zookeeper、Etcd")])])}),[],!1,null,null,null);s.default=r.exports}}]);