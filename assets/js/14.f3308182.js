(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{360:function(t,_,a){"use strict";a.r(_);var v=a(42),r=Object(v.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"二进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制"}},[t._v("#")]),t._v(" 二进制")]),t._v(" "),a("h2",{attrs:{id:"_1-0-16的二进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-16的二进制"}},[t._v("#")]),t._v(" (1). 0-16的二进制")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("十进制")]),t._v(" "),a("th",[t._v("二进制")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0000 0000")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0000 0001")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("0000 0010")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("0000 0011")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("0000 0100")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",[t._v("0000 0101")])]),t._v(" "),a("tr",[a("td",[t._v("6")]),t._v(" "),a("td",[t._v("0000 0110")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",[t._v("0000 0111")])]),t._v(" "),a("tr",[a("td",[t._v("8")]),t._v(" "),a("td",[t._v("0000 1000")])]),t._v(" "),a("tr",[a("td",[t._v("9")]),t._v(" "),a("td",[t._v("0000 1001")])]),t._v(" "),a("tr",[a("td",[t._v("10")]),t._v(" "),a("td",[t._v("0000 1010")])]),t._v(" "),a("tr",[a("td",[t._v("11")]),t._v(" "),a("td",[t._v("0000 1011")])]),t._v(" "),a("tr",[a("td",[t._v("12")]),t._v(" "),a("td",[t._v("0000 1100")])]),t._v(" "),a("tr",[a("td",[t._v("13")]),t._v(" "),a("td",[t._v("0000 1101")])]),t._v(" "),a("tr",[a("td",[t._v("14")]),t._v(" "),a("td",[t._v("0000 1110")])]),t._v(" "),a("tr",[a("td",[t._v("15")]),t._v(" "),a("td",[t._v("0000 1111")])]),t._v(" "),a("tr",[a("td",[t._v("16")]),t._v(" "),a("td",[t._v("0001 0000")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-原码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-原码"}},[t._v("#")]),t._v(" (2). 原码")]),t._v(" "),a("h2",{attrs:{id:"_3-反码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-反码"}},[t._v("#")]),t._v(" (3). 反码")]),t._v(" "),a("h2",{attrs:{id:"_4-补码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-补码"}},[t._v("#")]),t._v(" (4). 补码")]),t._v(" "),a("h2",{attrs:{id:"_5-移码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-移码"}},[t._v("#")]),t._v(" (5). 移码")]),t._v(" "),a("h2",{attrs:{id:"_6-按位与运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-按位与运算符（-）"}},[t._v("#")]),t._v(" (6). 按位与运算符（&）")]),t._v(" "),a("h3",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("参加运算的两个数据，按二进制位进行“与”运算。")]),t._v(" "),a("h3",{attrs:{id:"运算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算规则"}},[t._v("#")]),t._v(" 运算规则")]),t._v(" "),a("p",[t._v("0&0=0; 0&1=0;  1&0=0;  1&1=1；")]),t._v(" "),a("p",[t._v("即：两位同时为“1”，结果才为“1”，否则为0；"),a("strong",[t._v("负数按补码形式参加按位与运算。")])]),t._v(" "),a("h3",{attrs:{id:"例如"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如"}},[t._v("#")]),t._v(" 例如")]),t._v(" "),a("p",[t._v("3&5 即 0000 0011& 0000 0101 = 00000001 因此，3&5的值得1。")]),t._v(" "),a("p",[t._v("设X=10101110，取X的低4位，用 X & 0000 1111 = 00001110 即可得到。")]),t._v(" "),a("h3",{attrs:{id:"用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),a("ol",[a("li",[t._v("清零。如果想将一个单元清零，即使其全部二进制位与0，只要与一个各位都为零的数值相与，结果为零。")]),t._v(" "),a("li",[t._v("取一个数中指定位。方法：找一个数，对应X要取的位，该数的对应位与1，其余位为零，此数与X进行“与运算”可以得到X中的指定位。")])]),t._v(" "),a("h2",{attrs:{id:"_7-按位或运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-按位或运算符（-）"}},[t._v("#")]),t._v(" (7). 按位或运算符（|）")]),t._v(" "),a("h3",{attrs:{id:"描述-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述-2"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("参加运算的两个对象，按二进制位进行“或”运算。")]),t._v(" "),a("h3",{attrs:{id:"运算规则-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算规则-2"}},[t._v("#")]),t._v(" 运算规则")]),t._v(" "),a("p",[t._v("0|0=0； 0|1=1； 1|0=1；  1|1=1；")]),t._v(" "),a("p",[t._v("即 ：参加运算的两个对象只要有一个是1，其值就是1；"),a("strong",[t._v("负数按补码形式参加按位或运算。")])]),t._v(" "),a("h3",{attrs:{id:"例如-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如-2"}},[t._v("#")]),t._v(" 例如")]),t._v(" "),a("p",[t._v("3|5　即 00000011 | 0000 0101 = 00000111 因此，3|5的值得7。")]),t._v(" "),a("p",[t._v("将X=10100000的低4位置1 ，用X | 0000 1111 = 1010 1111即可得到。")]),t._v(" "),a("h3",{attrs:{id:"用途-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途-2"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),a("ol",[a("li",[t._v("常用来对一个数据的某些位置1。方法：找到一个数，对应X要置1的位，该数的对应位为1，其余位为零。此数与X相或可使X中的某些位置1。")])]),t._v(" "),a("h2",{attrs:{id:"_8-取反运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-取反运算符（-）"}},[t._v("#")]),t._v(" (8). 取反运算符（~）")]),t._v(" "),a("h3",{attrs:{id:"描述-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述-3"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("参加运算的一个数据，按二进制位进行“取反”运算。")]),t._v(" "),a("h3",{attrs:{id:"运算规则-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算规则-3"}},[t._v("#")]),t._v(" 运算规则")]),t._v(" "),a("p",[t._v("~1=0； ~0=1；")]),t._v(" "),a("p",[t._v("即：对一个二进制数按位取反，即将0变1，1变0。")]),t._v(" "),a("h3",{attrs:{id:"例如-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如-3"}},[t._v("#")]),t._v(" 例如")]),t._v(" "),a("p",[t._v("使一个数的最低位为零，可以表示为：a&~1。~1的值11111110，再按“与”运算，最低位一定为0。")]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("p",[a("strong",[t._v("~运算符的优先级比算术运算符、关系运算符、逻辑运算符和其他运算符都高。")])]),t._v(" "),a("h2",{attrs:{id:"_9-异或运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-异或运算符（-）"}},[t._v("#")]),t._v(" (9). 异或运算符（^）")]),t._v(" "),a("h3",{attrs:{id:"描述-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述-4"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("参加运算的两个数据，按二进制位进行“异或”运算。")]),t._v(" "),a("h3",{attrs:{id:"运算规则-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算规则-4"}},[t._v("#")]),t._v(" 运算规则")]),t._v(" "),a("p",[t._v("0^0=0； 0^1=1； 1^0=1；  1^1=0；")]),t._v(" "),a("p",[t._v("即：参加运算的两个对象，相对应的位置相同为0，不同为1。")]),t._v(" "),a("h3",{attrs:{id:"例如-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如-4"}},[t._v("#")]),t._v(" 例如")]),t._v(" "),a("p",[t._v("X=10101110，使X低4位翻转，用X ^0000 1111 = 1010 0001即可得到。")]),t._v(" "),a("p",[t._v("X ^ 00000000 = 1010 1110。")]),t._v(" "),a("h3",{attrs:{id:"用途-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用途-3"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),a("ol",[a("li",[t._v("使特定位翻转找一个数，对应X要翻转的各位，该数的对应位为1，其余位为零，此数与X对应位异或即可。")]),t._v(" "),a("li",[t._v("与0相异或，保留原值。")])]),t._v(" "),a("h2",{attrs:{id:"_10-左移运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-左移运算符（-）"}},[t._v("#")]),t._v(" (10). 左移运算符（<<）")]),t._v(" "),a("h3",{attrs:{id:"描述-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述-5"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。")]),t._v(" "),a("h3",{attrs:{id:"例如-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如-5"}},[t._v("#")]),t._v(" 例如")]),t._v(" "),a("p",[t._v("a = a<< 2将a的二进制位左移2位，右补0")]),t._v(" "),a("p",[t._v("若左移时舍弃的高位不包含1，则每左移一位，相当于该数乘以2。")]),t._v(" "),a("h2",{attrs:{id:"_11-右移运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-右移运算符（-）"}},[t._v("#")]),t._v(" (11). 右移运算符（>>）")]),t._v(" "),a("h3",{attrs:{id:"描述-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述-6"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。")]),t._v(" "),a("p",[a("strong",[t._v("操作数每右移一位，相当于该数除以2。")])]),t._v(" "),a("h3",{attrs:{id:"例如-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例如-6"}},[t._v("#")]),t._v(" 例如")]),t._v(" "),a("p",[t._v("a = a>> 2 将a的二进制位右移2位，左补0 or 补1得看被移数是正还是负。")])])}),[],!1,null,null,null);_.default=r.exports}}]);