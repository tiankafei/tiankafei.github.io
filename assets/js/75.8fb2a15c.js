(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{421:function(s,t,a){"use strict";a.r(t);var e=a(42),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[s._v("#")]),s._v(" 安装docker")]),s._v(" "),a("h2",{attrs:{id:"删除旧版本的docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除旧版本的docker"}},[s._v("#")]),s._v(" 删除旧版本的docker")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n            docker-engine\n")])])]),a("h2",{attrs:{id:"安装依赖库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖库"}},[s._v("#")]),s._v(" 安装依赖库")]),s._v(" "),a("p",[s._v("数据存储驱动包\tdevice-mapper-persistent-data")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ndevice-mapper-persistent-data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nlvm2\n")])])]),a("h2",{attrs:{id:"设置国内阿里云的安装源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置国内阿里云的安装源"}},[s._v("#")]),s._v(" 设置国内阿里云的安装源")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),a("h2",{attrs:{id:"检测使用最快的安装源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检测使用最快的安装源"}},[s._v("#")]),s._v(" 检测使用最快的安装源")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("yum makecache fast\n")])])]),a("h2",{attrs:{id:"安装docker-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-2"}},[s._v("#")]),s._v(" 安装docker")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce\n")])])]),a("h2",{attrs:{id:"docker服务启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker服务启动"}},[s._v("#")]),s._v(" docker服务启动")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("systemctl start docker.service\n")])])]),a("h2",{attrs:{id:"设置阿里云镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置阿里云镜像加速"}},[s._v("#")]),s._v(" 设置阿里云镜像加速")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n "registry-mirrors": ["https://w116l1xs.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n")])])]),a("h2",{attrs:{id:"设置docker开机启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置docker开机启动"}},[s._v("#")]),s._v(" 设置docker开机启动")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker.service\n")])])]),a("h2",{attrs:{id:"查看docker状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看docker状态"}},[s._v("#")]),s._v(" 查看docker状态")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("systemctl status docker.service\n")])])]),a("h1",{attrs:{id:"docker常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[s._v("#")]),s._v(" Docker常用命令")]),s._v(" "),a("h2",{attrs:{id:"docker容器信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker容器信息"}},[s._v("#")]),s._v(" Docker容器信息")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##查看docker容器版本")]),s._v("\ndocker version\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##查看docker容器信息")]),s._v("\ndocker info\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##查看docker容器帮助")]),s._v("\ndocker --help\n")])])]),a("h2",{attrs:{id:"镜像操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像操作"}},[s._v("#")]),s._v(" 镜像操作")]),s._v(" "),a("blockquote",[a("p",[s._v("提示：对于镜像的操作可使用镜像名、镜像长ID和短ID。")])]),s._v(" "),a("h3",{attrs:{id:"镜像查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像查看"}},[s._v("#")]),s._v(" 镜像查看")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 列出本地images")]),s._v("\ndocker images\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 含中间映像层")]),s._v("\ndocker images -a\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 只显示镜像ID")]),s._v("\ndocker images -q\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 含中间映像层")]),s._v("\ndocker images -qa\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示镜像摘要信息(DIGEST列)")]),s._v("\ndocker images --digests\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示镜像完整信息")]),s._v("\ndocker images --no-trunc\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示指定镜像的历史创建；参数：-H 镜像大小和日期，默认为true；--no-trunc  显示完整的提交记录；-q  仅列出提交记录ID")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" -H redis\n")])])]),a("h3",{attrs:{id:"镜像搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像搜索"}},[s._v("#")]),s._v(" 镜像搜索")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 搜索仓库MySQL镜像")]),s._v("\ndocker search mysql\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## --filter=stars=600：只显示 starts>=600 的镜像")]),s._v("\ndocker search --filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("stars"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v(" mysql\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## --no-trunc 显示镜像完整 DESCRIPTION 描述")]),s._v("\ndocker search --no-trunc mysql\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## --automated ：只列出 AUTOMATED=OK 的镜像")]),s._v("\ndocker search  --automated mysql\n")])])]),a("h3",{attrs:{id:"镜像下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像下载"}},[s._v("#")]),s._v(" 镜像下载")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 下载Redis官方最新镜像，相当于：docker pull redis:latest")]),s._v("\ndocker pull redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 下载仓库所有Redis镜像")]),s._v("\ndocker pull -a redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 下载私人仓库镜像")]),s._v("\ndocker pull bitnami/redis\n")])])]),a("h3",{attrs:{id:"镜像删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像删除"}},[s._v("#")]),s._v(" 镜像删除")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 单个镜像删除，相当于：docker rmi redis:latest")]),s._v("\ndocker rmi redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 强制删除(针对基于镜像有运行的容器进程)")]),s._v("\ndocker rmi -f redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 多个镜像删除，不同镜像间以空格间隔")]),s._v("\ndocker rmi -f redis tomcat nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 删除本地全部镜像")]),s._v("\ndocker rmi -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),a("h3",{attrs:{id:"镜像构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像构建"}},[s._v("#")]),s._v(" 镜像构建")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##（1）编写dockerfile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /docker/dockerfile\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" mycentos\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##（2）构建docker镜像")]),s._v("\ndocker build -f /docker/dockerfile/mycentos -t mycentos:1.1\n")])])]),a("h2",{attrs:{id:"容器操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器操作"}},[s._v("#")]),s._v(" 容器操作")]),s._v(" "),a("blockquote",[a("p",[s._v("提示：对于容器的操作可使用CONTAINER ID 或 NAMES。")])]),s._v(" "),a("h3",{attrs:{id:"容器启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器启动"}},[s._v("#")]),s._v(" 容器启动")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 新建并启动容器，参数：-i  以交互模式运行容器；-t  为容器重新分配一个伪输入终端；--name  为容器指定一个名称")]),s._v("\ndocker run -i -t --name mycentos\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 后台启动容器，参数：-d  已守护方式启动容器")]),s._v("\ndocker run -d mycentos\n")])])]),a("blockquote",[a("p",[s._v('注意：此时使用"docker ps -a"会发现容器已经退出。这是docker的机制：要使Docker容器后台运行，就必须有一个前台进程。解决方案：将你要运行的程序以前台进程的形式运行。')])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 启动一个或多个已经被停止的容器")]),s._v("\ndocker start redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 重启容器")]),s._v("\ndocker restart redis\n")])])]),a("h3",{attrs:{id:"容器进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器进程"}},[s._v("#")]),s._v(" 容器进程")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## top支持 ps 命令参数，格式：docker top [OPTIONS] CONTAINER [ps OPTIONS]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 列出redis容器中运行进程")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看所有运行容器的进程信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" Up"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("}'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),a("h3",{attrs:{id:"容器日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器日志"}},[s._v("#")]),s._v(" 容器日志")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看redis容器日志，默认参数")]),s._v("\ndocker logs rabbitmq\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看redis容器日志，参数：-f  跟踪日志输出；-t   显示时间戳；--tail  仅列出最新N条容器日志；")]),s._v("\ndocker logs -f -t --tail"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看容器redis从2019年05月21日后的最新10条日志。")]),s._v("\ndocker logs --since"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-05-21"')]),s._v(" --tail"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" redis\n")])])]),a("h3",{attrs:{id:"容器的进入与退出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器的进入与退出"}},[s._v("#")]),s._v(" 容器的进入与退出")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 使用run方式在创建时进入")]),s._v("\ndocker run -it centos /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 关闭容器并退出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 仅退出容器，不关闭")]),s._v("\n快捷键：Ctrl + P + Q\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 直接进入centos 容器启动命令的终端，不会启动新进程，多个attach连接共享容器屏幕，参数：--sig-proxy=false  确保CTRL-D或CTRL-C不会关闭容器")]),s._v("\ndocker attach --sig-proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false centos \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在 centos 容器中打开新的交互模式终端，可以启动新进程，参数：-i  即使没有附加也保持STDIN 打开；-t  分配一个伪终端")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -i -t  centos /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 以交互模式在容器中执行命令，结果返回到当前终端屏幕")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -i -t centos "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l /tmp\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 以分离模式在容器中执行命令，程序后台运行，结果不会反馈到当前终端")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -d centos  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" cache.txt \n")])])]),a("h3",{attrs:{id:"查看容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看容器"}},[s._v("#")]),s._v(" 查看容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看正在运行的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看正在运行的容器的ID")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -q\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 查看正在运行+历史运行过的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示运行容器总文件大小")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -s\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示最近创建容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -l\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示最近创建的3个容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 不截断输出")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" --no-trunc \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 获取镜像redis的元信息")]),s._v("\ndocker inspect redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 获取正在运行的容器redis的 IP")]),s._v("\ndocker inspect --format"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'")]),s._v(" redis\n")])])]),a("h3",{attrs:{id:"容器的停止与删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器的停止与删除"}},[s._v("#")]),s._v(" 容器的停止与删除")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 停止一个运行中的容器")]),s._v("\ndocker stop redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 停止所有正在运行的容器")]),s._v("\ndocker stop "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 杀掉一个运行中的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 删除一个已停止的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 删除一个运行中的容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 删除多个容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## -l 移除容器间的网络连接，连接名为 db")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -l db \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## -v 删除容器，并删除容器挂载的数据卷")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -v redis\n")])])]),a("h3",{attrs:{id:"生成镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成镜像"}},[s._v("#")]),s._v(" 生成镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 基于当前redis容器创建一个新的镜像；参数：-a 提交的镜像作者；-c 使用Dockerfile指令来创建镜像；-m :提交时的说明文字；-p :在commit时，将容器暂停")]),s._v("\ndocker commit -a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DeepInThought"')]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my redis"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("redis容器ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  myredis:v1.1\n")])])]),a("h3",{attrs:{id:"容器与主机间的数据拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器与主机间的数据拷贝"}},[s._v("#")]),s._v(" 容器与主机间的数据拷贝")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 将rabbitmq容器中的文件copy至本地路径")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" rabbitmq:/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 将主机文件copy至rabbitmq容器")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" rabbitmq:/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 将主机文件copy至rabbitmq容器，目录重命名为[container_path]（注意与非重命名copy的区别）")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("local_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" rabbitmq:/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("container_path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);